{
  "pluginAlias": "enphaseEnvoy",
  "pluginType": "platform",
  "singular": true,
  "headerDisplay": "This plugin works with Enphase Photovoltaic devices and are exposed to HomeKit as separate accessories and each needs to be manually paired.\n\n1. Open the Home <img src='https://user-images.githubusercontent.com/3979615/78010622-4ea1d380-738e-11ea-8a17-e6a465eeec35.png' height='16.42px'> app on your device.\n2. Tap the <img src='https://user-images.githubusercontent.com/3979615/78010869-9aed1380-738e-11ea-9644-9f46b3633026.png' height='16.42px'>.\n3. Tap *Add Accessory*, and select *I Don't Have a Code or Cannot Scan* or *More Options*.\n4. Select Your accessory.\n5. Enter the Homebridge PIN or scan the QR code, this can be found in Homebridge UI or Homebridge logs.\n6. Complete the accessory setup.",
  "footerDisplay": "For documentation please see [GitHub repository](https://github.com/grzegorz914/homebridge-enphase-envoy).",
  "schema": {
    "type": "object",
    "properties": {
      "devices": {
        "title": "Devices",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "title": "Device name",
              "type": "string",
              "default": "Envoy-S",
              "required": true
            },
            "host": {
              "title": "IP/Hostname",
              "type": "string",
              "default": "192.168.1.35",
              "required": false,
              "format": "hostname"
            },
            "disableLogInfo": {
              "title": "Disable log info",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This disable log info, all values and state will not be displayed in Homebridge log console."
            },
            "enableDebugMode": {
              "title": "Debug",
              "type": "boolean",
              "default": false,
              "description": "This enable debug mode.",
              "required": false
            },
            "envoyPasswd": {
              "title": "Envoy password",
              "type": "string",
              "description": "Here set envoy password (only if U already changed default password).",
              "required": false
            },
            "installerPasswd": {
              "title": "Installer password",
              "type": "string",
              "description": "Here set installer password, need to be generated, more info here: https://thecomputerperson.wordpress.com/2016/08/28/reverse-engineering-the-enphase-installer-toolkit/",
              "required": false
            },
            "entrezAuth": {
              "title": "Entrez authorization",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable Entrez authorization for Envoy with firmware 7.x.x."
            },
            "entrezToken": {
              "title": "Token",
              "type": "string",
              "description": "Here set the entrez authorization token, more info here: https://entrez.enphaseenergy.com",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].entrezAuth === true;"
              }
            },
            "powerProductionMaxDetected": {
              "title": "Power production max detected",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set *max production Power* in (W) at which You get notyfication message.",
              "required": false
            },
            "energyProductionLifetimeOffset": {
              "title": "Energy production lifetime offset",
              "type": "integer",
              "default": 0,
              "maximum": 100000,
              "description": "Here set energy production *Offset* in (Wh) for lifetime energy if nedded.",
              "required": false
            },
            "powerConsumptionTotalMaxDetected": {
              "title": "Total - Power consumption max detected",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set *consumption-total max Power* in (W) at which You get notification message.",
              "required": false
            },
            "energyConsumptionTotalLifetimeOffset": {
              "title": "Total - Energy consumption lifetime offset",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set energy consumption *Offset* in (Wh) for lifetime total energy if nedded.",
              "required": false
            },
            "powerConsumptionNetMaxDetected": {
              "title": "Net - Power consumption max detected",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set *consumption-net max Power* in (W) at which You get notification message.",
              "required": false
            },
            "energyConsumptionNetLifetimeOffset": {
              "title": "Net - Energy consumption lifetime offset",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set energy consumption *Offset* in (Wh) for lifetime net energy if nedded.",
              "required": false
            },
            "enableMqtt": {
              "title": "Enable",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable MQTT client."
            },
            "mqttHost": {
              "title": "IP/Hostname",
              "type": "string",
              "placeholder": "ip or hostname",
              "required": true,
              "format": "hostname",
              "description": "Here set the IP/Hostname of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttPort": {
              "title": "Port",
              "type": "integer",
              "placeholder": 1883,
              "required": true,
              "description": "Here set the port of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttPrefix": {
              "title": "Prefix",
              "type": "string",
              "placeholder": "home/envoy",
              "required": false,
              "description": "Here set the prefix.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttAuth": {
              "title": "Authorization",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable authorization for MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttUser": {
              "title": "User",
              "type": "string",
              "placeholder": "user",
              "required": false,
              "description": "Here set the user of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
              }
            },
            "mqttPasswd": {
              "title": "Password",
              "type": "string",
              "placeholder": "password",
              "required": false,
              "description": "Here set the password of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
              }
            },
            "mqttDebug": {
              "title": "Debug",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable debug mode for MQTT.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            }
          }
        }
      }
    }
  },
  "layout": [{
    "key": "devices",
    "type": "tabarray",
    "title": "{{ value.name || 'new device' }}",
    "items": [
      "devices[].name",
      "devices[].host",
      {
        "key": "devices[]",
        "type": "section",
        "title": "Production",
        "expandable": true,
        "expanded": false,
        "items": [
          "devices[].powerProductionMaxDetected",
          "devices[].energyProductionLifetimeOffset"
        ]
      },
      {
        "key": "devices[]",
        "type": "section",
        "title": "Consumption",
        "expandable": true,
        "expanded": false,
        "items": [
          "devices[].powerConsumptionTotalMaxDetected",
          "devices[].energyConsumptionTotalLifetimeOffset",
          "devices[].powerConsumptionNetMaxDetected",
          "devices[].energyConsumptionNetLifetimeOffset"
        ]
      },
      {
        "key": "devices[]",
        "type": "section",
        "title": "MQTT Client",
        "expandable": true,
        "expanded": false,
        "items": [
          "devices[].enableMqtt",
          "devices[].mqttHost",
          "devices[].mqttPort",
          "devices[].mqttPrefix",
          "devices[].mqttAuth",
          "devices[].mqttUser",
          "devices[].mqttPasswd",
          "devices[].mqttDebug"
        ]
      },
      {
        "key": "devices[]",
        "type": "section",
        "title": "Authorization",
        "expandable": true,
        "expanded": false,
        "items": [
          "devices[].envoyPasswd",
          "devices[].installerPasswd",
          "devices[].entrezAuth",
          "devices[].entrezToken"
        ]
      },
      {
        "key": "devices[]",
        "type": "section",
        "title": "Advanced settings",
        "expandable": true,
        "expanded": false,
        "items": [
          "devices[].enableDebugMode",
          "devices[].disableLogInfo"
        ]
      }
    ]
  }]
}