{
  "pluginAlias": "enphaseEnvoy",
  "pluginType": "platform",
  "singular": true,
  "headerDisplay": "This plugin works with Enphase Photovoltaic. Devices are exposed to HomeKit as separate accessories and each needs to be manually paired.\n\n1. Open the Home <img src='https://user-images.githubusercontent.com/3979615/78010622-4ea1d380-738e-11ea-8a17-e6a465eeec35.png' height='16.42px'> app on your device.\n2. Tap the <img src='https://user-images.githubusercontent.com/3979615/78010869-9aed1380-738e-11ea-9644-9f46b3633026.png' height='16.42px'>.\n3. Tap *Add Accessory*, and select *I Don't Have a Code or Cannot Scan* or *More Options*.\n4. Select Your accessory and press add anyway.\n5. Enter the PIN or scan the QR code, this can be found in Homebridge UI or Homebridge logs.\n6. Complete the accessory setup.",
  "footerDisplay": "For documentation please see [GitHub repository](https://github.com/grzegorz914/homebridge-enphase-envoy).",
  "schema": {
    "type": "object",
    "properties": {
      "devices": {
        "title": "Devices",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "title": "Name",
              "type": "string",
              "placeholder": "Envoy-S",
              "required": true
            },
            "host": {
              "title": "IP/Hostname",
              "type": "string",
              "placeholder": "192.168.1.35",
              "required": false,
              "format": "hostname"
            },
            "envoyFirmware7xx": {
              "title": "Firmware 7.x.x",
              "type": "boolean",
              "default": false,
              "required": true,
              "description": "This enable support for Envoy with firmware 7.x.x"
            },
            "envoyFirmware7xxToken": {
              "title": "Envoy Token",
              "type": "string",
              "placeholder": "xdDe32Dsgf6hgEz68JHdsseg)",
              "required": false,
              "description": "Here paste your envoy token generated here: https://enlighten.enphaseenergy.com/entrez-auth-token?serial_num=envoySerialNumber",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "envoyPasswd": {
              "title": "Envoy Password",
              "type": "string",
              "description": "Here set envoy password (only if U already changed default password).",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === false;"
              }
            },
            "disableLogInfo": {
              "title": "Disable Log Info",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This disable log info, all values and state will not be displayed in Homebridge log console."
            },
            "disableLogDeviceInfo": {
              "title": "Disable Log Device Info",
              "type": "boolean",
              "default": false,
              "description": "This disable log device info by every connections device to the network.",
              "required": false
            },
            "enableDebugMode": {
              "title": "Debug",
              "type": "boolean",
              "default": false,
              "description": "This enable debug mode.",
              "required": false
            },
            "powerProductionMaxAutoReset": {
              "title": "Power Peak Auto Reset",
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0,
              "description": "Here select at which period of time the *Power peak* will reset.",
              "oneOf": [
                {
                  "title": "None",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "Every Day",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "Every Week",
                  "enum": [
                    2
                  ]
                },
                {
                  "title": "Every Month",
                  "enum": [
                    3
                  ]
                }
              ],
              "required": true
            },
            "powerProductionMaxDetected": {
              "title": "Power Peak Detected",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set *Power peak* in (W) at which You get notyfication message.",
              "required": false
            },
            "energyProductionLifetimeOffset": {
              "title": "Energy Lifetime Offset",
              "type": "integer",
              "default": 0,
              "maximum": 100000,
              "description": "Here set energy production *Offset* in (Wh) for lifetime energy if nedded.",
              "required": false
            },
            "powerConsumptionTotalMaxAutoReset": {
              "title": "Power Peak Auto Reset",
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0,
              "description": "Here select at which period of time the *Power peak* will reset.",
              "oneOf": [
                {
                  "title": "None",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "Every Day",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "Every Week",
                  "enum": [
                    2
                  ]
                },
                {
                  "title": "Every Month",
                  "enum": [
                    3
                  ]
                }
              ],
              "required": true
            },
            "powerConsumptionTotalMaxDetected": {
              "title": "Power Peak Detected",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set *Power peak* in (W) at which You get notification message.",
              "required": false
            },
            "energyConsumptionTotalLifetimeOffset": {
              "title": "Energy Lifetime Offset",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set energy consumption *Offset* in (Wh) for lifetime total energy if nedded.",
              "required": false
            },
            "powerConsumptionNetMaxAutoReset": {
              "title": "Power Peak Auto Reset",
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0,
              "description": "Here select at which period of time the *Power peak* will reset.",
              "oneOf": [
                {
                  "title": "None",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "Every Day",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "Every Eeek",
                  "enum": [
                    2
                  ]
                },
                {
                  "title": "Every Month",
                  "enum": [
                    3
                  ]
                }
              ],
              "required": true
            },
            "powerConsumptionNetMaxDetected": {
              "title": "Power Peak Detected",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set *Power peak* in (W) at which You get notification message.",
              "required": false
            },
            "energyConsumptionNetLifetimeOffset": {
              "title": "Energy Lifetime Offset",
              "type": "integer",
              "default": 0,
              "maximum": 65535,
              "description": "Here set energy consumption *Offset* in (Wh) for lifetime net energy if nedded.",
              "required": false
            },
            "supportEnsembleStatus": {
              "title": "Ensemble Status",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check *Ensemble Status*.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "supportLiveData": {
              "title": "LiveData",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check *Live Data*.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "supportProductionPowerMode": {
              "title": "Power Mode",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check/control production *Power Mode*."
            },
            "supportPlcLevel": {
              "title": "PLC Level",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check *PLC Level*."
            },
            "enableMqtt": {
              "title": "Enable",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable MQTT client."
            },
            "mqttHost": {
              "title": "IP/Hostname",
              "type": "string",
              "placeholder": "ip or hostname",
              "required": true,
              "format": "hostname",
              "description": "Here set the IP/Hostname of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttPort": {
              "title": "Port",
              "type": "integer",
              "placeholder": 1883,
              "required": true,
              "description": "Here set the port of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttPrefix": {
              "title": "Prefix",
              "type": "string",
              "placeholder": "home/envoy",
              "required": false,
              "description": "Here set the prefix.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttAuth": {
              "title": "Authorization",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable authorization for MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttUser": {
              "title": "User",
              "type": "string",
              "placeholder": "user",
              "required": false,
              "description": "Here set the user of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
              }
            },
            "mqttPasswd": {
              "title": "Password",
              "type": "string",
              "placeholder": "password",
              "required": false,
              "description": "Here set the password of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
              }
            },
            "mqttDebug": {
              "title": "Debug",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable debug mode for MQTT.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "key": "devices",
      "type": "tabarray",
      "title": "{{ value.name || 'new device' }}",
      "items": [
        "devices[].name",
        "devices[].host",
        {
          "key": "devices[]",
          "type": "section",
          "title": "Production",
          "expandable": true,
          "expanded": false,
          "items": [
            "devices[].powerProductionMaxAutoReset",
            "devices[].powerProductionMaxDetected",
            "devices[].energyProductionLifetimeOffset"
          ]
        },
        {
          "key": "devices[]",
          "type": "section",
          "title": "Consumption",
          "expandable": true,
          "expanded": false,
          "items": [
            {
              "key": "devices[]",
              "type": "section",
              "title": "Net",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].powerConsumptionNetMaxAutoReset",
                "devices[].powerConsumptionNetMaxDetected",
                "devices[].energyConsumptionNetLifetimeOffset"
              ]
            },
            {
              "key": "devices[]",
              "type": "section",
              "title": "Total",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].powerConsumptionTotalMaxAutoReset",
                "devices[].powerConsumptionTotalMaxDetected",
                "devices[].energyConsumptionTotalLifetimeOffset"
              ]
            }
          ]
        },
        {
          "key": "devices[]",
          "type": "section",
          "title": "Authorization",
          "expandable": true,
          "expanded": false,
          "items": [
            "devices[].envoyFirmware7xx",
            "devices[].envoyPasswd",
            "devices[].envoyFirmware7xxToken"
          ]
        },
        {
          "key": "devices[]",
          "type": "section",
          "title": "Advanced Settings",
          "expandable": true,
          "expanded": false,
          "items": [
            "devices[].enableDebugMode",
            "devices[].disableLogInfo",
            "devices[].disableLogDeviceInfo",
            "devices[].supportProductionPowerMode",
            "devices[].supportPlcLevel",
            "devices[].supportEnsembleStatus",
            "devices[].supportLiveData"
          ]
        },
        {
          "key": "devices[]",
          "type": "section",
          "title": "MQTT",
          "expandable": true,
          "expanded": false,
          "items": [
            "devices[].enableMqtt",
            "devices[].mqttHost",
            "devices[].mqttPort",
            "devices[].mqttPrefix",
            "devices[].mqttAuth",
            "devices[].mqttUser",
            "devices[].mqttPasswd",
            "devices[].mqttDebug"
          ]
        }
      ]
    }
  ]
}